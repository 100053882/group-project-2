




Introduction to Software Engineering (Fall 2022)
Instructor: Dr. Davor Svetinovic 
Project: Child Monitor 
Phase 2: Requirements Study

Done by:
Mariam Alhashmi - 100053448 
Hind Bamatraf - 100053882
Manar Altamimi -100053100
Bhoor Abdulla -100053403








Table of Contents: 

Problem………………………………………………………………………………………………….2

Background Information……………………………………………………………………………….2

User Requirements…………………………………………………………………………………….2

System Requirements…………………………………………………………………………………3
Functional Requirements……………………………………………………………………..3
Non-Functional Requirements………………………………………………………………..3

Requirements Table……………………………………………………………………………………4

Data Dictionary…………………………………………………………………………………………6

Use-Case Description………………………………………………………………………………….6

Use-Case Diagram…………………………………………………………………………………….9

Requirements Measure………………………………………………………………………………10

Github Link: 











Problem :
The objective of the project is to offer a solution for the clients Mouza and Ahmed to resolve their problem. The clients were problemed when it was time for Mouza to resume work after her maternity leave. Since both parents go to work while their baby is staying at home with a family member or a nanny, they needed a solution to monitor their baby. Our solution is to create a baby monitoring system/app that offers Mouza and Ahmed a way to keep an eye on their two-month-old baby Mohammed and monitor his wellbeing. Our aim is to develop and implement a program that enables parents to convey any instructions and communicate with the nanny or a family member staying with the baby through the monitor. The design will include the acquired features that includes motion sensor, camera and microphone that enables the monitor program to alert and send notification to the parents by the app or website of the monitor. Consequently, to start the project, we used a feasibility study to evaluate the validity of our idea. Moreover, we started defining our specifications and requirements.

Background information : 
The client returns to work after maternity leave and therefore needs a solution to keep her baby safe and comfortable at work. The client will have someone to take care of the child, perhaps a parent or a nanny. Her working husband, who works in the company's human resources department, called her while she was on maternity leave to check on her and the newborn. However, as the client is back at her office job, it would be ideal if both parents had the opportunity to look after the 3-month-old baby while they are at work.

User requirements : 
There are specific user requirements that our app has to have in order to provide our clients with the most efficient monitoring system. The following requirements are as follows:
Easily accessible.
Easy to use and navigate through.
Secure, only the parents and the people the parents select can monitor the child and access his/her information.
 24/7 monitoring available.
Updates about when and what the child is eating.
Updates on the location of the child.
User can choose when to be notified, whether it be whenever the child eats, leaves the room, sleeps, or wakes up.
User can communicate with the caretaker and the child through chat, camera, and voice calls.
User can choose to play lullabies either from a provided list of lullabies or can import his or her own lullaby.
User can look back and watch the recorded feed.
User can check the room temperature and be notified when the room is too hot or too cold depending on the room temperature the user will input.
User can zoom in to look at the baby more closely.


System requirements :
Functional Requirements:
System should be able to record the feed and allow the user to rewatch it.
System should be able to allow the user to zoom using the app in order to look at the child more closely.
System should be able to update users whenever specific tasks are completed.
System should be able to check the temperature of the room the child is in.
System should be able to track the child’s movement.
System should be able to allow parents to access their child's information and feed through password and face recognition.
System should be able to allow user to communicate with child and caretaker through having access to microphones and cameras and chats.

Non Functional:
Accessibility: Users should be able to easily access, use, and navigate through the app. The time it should take the users to learn how to use the app should be around a minute.
Privacy: System should only allow parents and the people selected by the parents to have access to child’s information.
Security: System should keep child data protected from hackers.
Reliability: System should never loose any child data and should always allow parents to monitor their child 24/7.


Requirements Table:
#
ID
Name
Text
1
S0.0
Monitoring system project
Describes a system that allows for monitoring a child.
2
S1.0
Accessibility 
Easily accessible
3
S2.0
Navigation 
Easy to use and navigate through
4
S3.0
Security 
Secure, only the parents and the people the parents select can monitor the child and access his/her information.
5
S4.0
Monitoring
 24/7 monitoring available.


6
S5.0
Updates
System is able to update and notify user after specific tasks are complete. 
7
S5.1
Updates eating
Updates about when and what the child is eating.


8
S5.2
Updates location
Updates on the location of the child.


9
S5.3
Notification flexibility
User can choose when to be notified, whether it be whenever the child eats, leaves the room, sleeps, or wakes up.


10
S6.0
Communication
User can communicate with the caretaker and the child through chat, camera, and voice calls.


11
S7.0
Lullaby flexibility
User can choose to play lullabies either from a provided list of lullabies or can import his or her own lullaby.


12
S8.0
Recordings
User can look back and watch the recorded feed.
13
S9.0
Temperature checker
User can check the room temperature and be notified when the room is too hot or too cold depending on the room temperature the user will input.


14
S10.0
Zooming flexibility 
User can zoom in to look at the baby more closely.




Data Dictionary :
Data Dictionary
Variable name
Data type
Description
features
Client_UserName
String
Stores the username of the user
Used to check if the entered username matches the registered username, if so it allows the user to enter, otherwise the user must retry entering the username.
Client_Password
String
Stores the password of the user
Used to check if the entered password matches the saved password. If yes, the user can enter the password, otherwise the user will have to retry entering the password.
IsCameraConnected
Boolean
Stored true and false information
Used to check if the camera is connected to the system, it displays an error when the camera is disconnected.
Current_users
Int
Stores the number of users currently 
Checks and displays the number of people that are logged into the same account



Use Case Description :
The actors of the system are:
Parents 
Family member or nanny
The functions (use-cases) of the system are:
Create account (sign up)
Login 
Detect sounds
Display live stream
Display recorded video 
Send and receive chat 
Notify changes 
Alert for emergency 
Sense temperature and humidity 
Access information 
Save data



Examples of Use Case Structure: 

Use Case 1
 
Name: Login 
Description: This use case allows the user (parent) to login to their account. First, the user opens the app or website to login in. Then, enter their username and password to access their account. Finally, the system will view their information.
Actors: parents, nanny, and system 
Pre-Conditions: 
Existing account
Post-Conditions: 
Username and password are valid and approved by the system for access
Successful path: 
a)    The user opens the app/website
b)    The system requests username and password information 
c)     The user enters username and password
d)    The system checks account validity 
e)    The system verifies username and password match
f)      The system provides user’s data
g)    The user can access their account 
Alternative path: 
-        Invalid account: the system will notify the user that the username is not found because no account is registered (part d)
-        Incorrect password: the system will inform the user to re-enter the password because the password is incorrect (part e)
-        Forget password: the system will inform the user to change password because of many failed attempts (part e)
Exceptions: 
Username not registered: the system promotes “Invalid Username”
Incorrect password: the system promotes “Invalid Password”
Rules: 
Username is a valid account 
Password matches
 
 
 
Use Case 2
 
Name: Display live stream
Description: This use case enables the user (parent) to watch a live stream. First, the user selects a live stream. Then, the system checks camera accessibility. Finally, if the system approves for camera permission, the stream will be displayed.
Actors: Parents, system, and camera 
Pre-Conditions: Camera accessibility
Post-Conditions: System displays live stream for the user through the app/website
 Successful path: 
a)    The user clicks on live stream video option
b)    The system requests camera permission accessibility
c)     The user confirms camera permission
d)    The system checks wi-fi connectivity
e)     The system loads live stream functionality  
f)      The system receives and record data and information in database 
g)    The user can view live stream video 
 Alternative path: 
Camera permission denied: the system will notify the user that camera has no access (part c)
No Wi-fi connection: the system will notify the user that they are not connected to the wi-fi (part d)
Poor Wi-fi connection: The system will warn the user for low quality resolution (part d)
Exceptions:
Can’t view live stream: the system promotes “Camera Access Denied”
Not connected to Wi-Fi: the system promotes “Not Connected to Wi-Fi”
rules: 
Connected to Wi-Fi 
Monitor and app have access to camera 

 

Use Case Diagram:


Requirements measures:

PROPERTY
MEASURE
Speed
2.0 second speed between processed transactions
2.0 second speed refresh time
Size
Bytes
ROM chips
Ease of Use
Training time (tour?)
Number of help frames
Reliability
Mean time to failure
Probability of unavailability (15%)
Rate of failure occurrence (2%)


Robustness
Time to restart after failure (2 minutes)
Percentage of Events that could cause failure
(20%)( failure to log in/wifi/ other mistakes)
Probability of data corruption on failure (0%) everything will be automatically saved 
Portability
Number of target systems


